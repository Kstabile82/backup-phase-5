{"ast":null,"code":"var _jsxFileName = \"/Users/kstabile/backup-phase-5/client/src/Components/Questions.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\n// import Options from \"./Options\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Questions(_ref) {\n  _s();\n  let {\n    i,\n    setI\n  } = _ref;\n  const [addQs, setAddQs] = useState(false);\n  const [qs, setQs] = useState(i.questions);\n  function handleChangeNewOption(e) {\n    e.preventDefault();\n    if (e.target.defaultValue === \"Y/N\") {\n      if (e.target.value === \"N\") {\n        correctAnswer = false;\n      } else {\n        correctAnswer = true;\n      }\n    }\n    if (e.target.defaultValue === \"Enter option\") {\n      newOptionInput = e.target.value;\n    }\n  }\n  function handleEditOptions(e, qn) {\n    // setQuestion(qn)\n    // setOptions(qn.optionmethod)\n  }\n  function handleSaveNewOption(e) {\n    e.preventDefault();\n    // setAddOpt(false)\n    fetch(\"/options\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        question_id: qn.id,\n        text: newOptionInput,\n        correct: correctAnswer\n      })\n    }).then(r => r.json()).then(newO => {\n      //   setOptions([...options, newO])\n      //   setAddOpt(false)\n    });\n  }\n  function handleDeleteOption(e, o) {\n    e.preventDefault();\n    //delete request for o\n    //option and question state updates all happen from Adminpage\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n}\n_s(Questions, \"xTw0fdss4rcM8jhjblbnLXUrRhw=\");\n_c = Questions;\nexport default Questions;\nvar _c;\n$RefreshReg$(_c, \"Questions\");","map":{"version":3,"names":["React","useState","Questions","i","setI","addQs","setAddQs","qs","setQs","questions","handleChangeNewOption","e","preventDefault","target","defaultValue","value","correctAnswer","newOptionInput","handleEditOptions","qn","handleSaveNewOption","fetch","method","headers","body","JSON","stringify","question_id","id","text","correct","then","r","json","newO","handleDeleteOption","o"],"sources":["/Users/kstabile/backup-phase-5/client/src/Components/Questions.js"],"sourcesContent":["import React, { useState } from \"react\"; \n// import Options from \"./Options\";\n\nfunction Questions({ i, setI }) {\n    const [addQs, setAddQs] = useState(false);\n    const [qs, setQs] = useState(i.questions);\n  \n    \n   \n    function handleChangeNewOption(e) {\n        e.preventDefault();\n        if (e.target.defaultValue === \"Y/N\") {\n          if (e.target.value === \"N\"){\n            correctAnswer = false;\n          }\n          else {\n            correctAnswer = true;\n          }\n        }\n        if (e.target.defaultValue === \"Enter option\") {\n            newOptionInput = e.target.value\n        }\n    }\n    function handleEditOptions(e, qn){\n        // setQuestion(qn)\n        // setOptions(qn.optionmethod)\n    }\n    function handleSaveNewOption(e) {\n        e.preventDefault();\n        // setAddOpt(false)\n        fetch(\"/options\", {\n            method: \"POST\",\n            headers: {\n            \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n            question_id: qn.id,\n            text: newOptionInput,\n            correct: correctAnswer\n            }),\n        })\n        .then((r) => r.json())\n        .then((newO) => {\n        //   setOptions([...options, newO])\n        //   setAddOpt(false)\n        })\n    }\n    function handleDeleteOption(e, o) {\n        e.preventDefault();\n        //delete request for o\n        //option and question state updates all happen from Adminpage\n    }\n    return (\n        <div>\n     \n    </div>\n    )\n}\n\n\nexport default Questions; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC;AAAA;AAEA,SAASC,SAAS,OAAc;EAAA;EAAA,IAAb;IAAEC,CAAC;IAAEC;EAAK,CAAC;EAC1B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGL,QAAQ,CAAC,KAAK,CAAC;EACzC,MAAM,CAACM,EAAE,EAAEC,KAAK,CAAC,GAAGP,QAAQ,CAACE,CAAC,CAACM,SAAS,CAAC;EAIzC,SAASC,qBAAqB,CAACC,CAAC,EAAE;IAC9BA,CAAC,CAACC,cAAc,EAAE;IAClB,IAAID,CAAC,CAACE,MAAM,CAACC,YAAY,KAAK,KAAK,EAAE;MACnC,IAAIH,CAAC,CAACE,MAAM,CAACE,KAAK,KAAK,GAAG,EAAC;QACzBC,aAAa,GAAG,KAAK;MACvB,CAAC,MACI;QACHA,aAAa,GAAG,IAAI;MACtB;IACF;IACA,IAAIL,CAAC,CAACE,MAAM,CAACC,YAAY,KAAK,cAAc,EAAE;MAC1CG,cAAc,GAAGN,CAAC,CAACE,MAAM,CAACE,KAAK;IACnC;EACJ;EACA,SAASG,iBAAiB,CAACP,CAAC,EAAEQ,EAAE,EAAC;IAC7B;IACA;EACJ;EACA,SAASC,mBAAmB,CAACT,CAAC,EAAE;IAC5BA,CAAC,CAACC,cAAc,EAAE;IAClB;IACAS,KAAK,CAAC,UAAU,EAAE;MACdC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACT,cAAc,EAAE;MAChB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACrBC,WAAW,EAAER,EAAE,CAACS,EAAE;QAClBC,IAAI,EAAEZ,cAAc;QACpBa,OAAO,EAAEd;MACT,CAAC;IACL,CAAC,CAAC,CACDe,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,IAAI,EAAE,CAAC,CACrBF,IAAI,CAAEG,IAAI,IAAK;MAChB;MACA;IACA,CAAC,CAAC;EACN;EACA,SAASC,kBAAkB,CAACxB,CAAC,EAAEyB,CAAC,EAAE;IAC9BzB,CAAC,CAACC,cAAc,EAAE;IAClB;IACA;EACJ;;EACA,oBACI;IAAA;IAAA;IAAA;EAAA,QAEE;AAEV;AAAC,GAtDQV,SAAS;AAAA,KAATA,SAAS;AAyDlB,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module"}