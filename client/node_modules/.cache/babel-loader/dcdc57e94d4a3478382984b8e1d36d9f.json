{"ast":null,"code":"var _jsxFileName = \"/Users/kstabile/backup-phase-5/client/src/Components/Form.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Form(_ref) {\n  _s();\n  let {\n    answerObj,\n    setAnswerObj,\n    qs,\n    i,\n    infoAns,\n    setInfoAns,\n    testArr,\n    setTestArr\n  } = _ref;\n  //   const[inputQ, setInputQ] = useState(null)\n  //   const [inputVal, setInputVal] = useState(null)\n  //   const [correctAns, setCorrectAns] = useState(null)\n  const [obj, setObj] = useState(null);\n  let obJ = {};\n  let thisValue;\n  function handleTestInput(e, q) {\n    e.preventDefault();\n    let inputQ;\n    let inputVal;\n    let correctAns;\n    e.target.checked = !e.target.checked;\n    inputQ = e.target.name;\n    inputVal = e.target.value;\n    correctAns = q.options.find(o => o.correct);\n    setObj({\n      \"question\": inputQ,\n      \"input\": inputVal,\n      \"correct_answer\": correctAns.text\n    });\n  }\n  function handleSubmitClicked(e, q) {\n    e.preventDefault();\n    //testArr\n\n    // let alreadyexists = infoAns.find(iA => iA.question === answerObj.question)\n    //if alreadyexists, splice the infoAns array and replace iA w/ answerObj\n    //else setInfoAns([...infoAns, answerObj])\n    let ans = q.options.find(o => o.correct === true);\n    //ans is the correct option \n    // setInfoAns([...infoAns.filter(iA => iA.question !== answerObj.question), answerObj])\n    //array of Q&A, filters so the new Q isnt included, then adds the new Q&A\n    // let testObj = { infoId: i.id, questionId: q.id, answer: ans.text, inputName: inputVal };\n    // setTestArr([...testArr.filter(tA => tA.questionId !== testObj.questionId), testObj])\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: qs.map(q => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => handleSubmitClicked(e, q),\n        children: [q.text, q.options.map(o => /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [o.text, /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: q.text,\n            value: o.text,\n            checked: \"false\",\n            onChange: e => handleTestInput(e, q)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Enter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 22\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n_s(Form, \"lNsNia2n7WoMCOhNStSJAyscJP4=\");\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useState","Form","answerObj","setAnswerObj","qs","i","infoAns","setInfoAns","testArr","setTestArr","obj","setObj","obJ","thisValue","handleTestInput","e","q","preventDefault","inputQ","inputVal","correctAns","target","checked","name","value","options","find","o","correct","text","handleSubmitClicked","ans","map"],"sources":["/Users/kstabile/backup-phase-5/client/src/Components/Form.js"],"sourcesContent":["import React, { useState } from \"react\"; \n\nfunction Form({ answerObj, setAnswerObj, qs, i, infoAns, setInfoAns, testArr, setTestArr }){\n//   const[inputQ, setInputQ] = useState(null)\n//   const [inputVal, setInputVal] = useState(null)\n//   const [correctAns, setCorrectAns] = useState(null)\n    const [obj, setObj] = useState(null)\n    \n    let obJ = {}\n    let thisValue;\n\n    function handleTestInput(e, q) {\n        e.preventDefault();\n        let inputQ; \n        let inputVal;\n        let correctAns;\n        e.target.checked = !e.target.checked\n        inputQ = e.target.name\n        inputVal = e.target.value\n        correctAns = q.options.find(o => o.correct)   \n       setObj({\"question\": inputQ, \"input\": inputVal, \"correct_answer\": correctAns.text})\n    }\n    function handleSubmitClicked(e, q) {\n        e.preventDefault();\n        //testArr\n\n        // let alreadyexists = infoAns.find(iA => iA.question === answerObj.question)\n        //if alreadyexists, splice the infoAns array and replace iA w/ answerObj\n        //else setInfoAns([...infoAns, answerObj])\n       let ans = q.options.find(o => o.correct === true)\n       //ans is the correct option \n        // setInfoAns([...infoAns.filter(iA => iA.question !== answerObj.question), answerObj])\n        //array of Q&A, filters so the new Q isnt included, then adds the new Q&A\n            // let testObj = { infoId: i.id, questionId: q.id, answer: ans.text, inputName: inputVal };\n            // setTestArr([...testArr.filter(tA => tA.questionId !== testObj.questionId), testObj])\n    }\n\n    return (\n        <div>\n            {qs.map(q => \n                <div><form onSubmit={(e) => handleSubmitClicked(e, q)}>{q.text}\n                {q.options.map(o => \n                    <label>{o.text}\n                    <input\n                    type=\"radio\"\n                    name={q.text}\n                    value={o.text}\n                    checked=\"false\"\n                    onChange={(e) => handleTestInput(e, q)}\n                    >\n                    </input></label>)}\n                    <button>Enter</button>\n\n                </form> \n                 </div>\n            )}\n   </div>\n    )\n}\n\nexport default Form;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC;AAExC,SAASC,IAAI,OAA8E;EAAA;EAAA,IAA7E;IAAEC,SAAS;IAAEC,YAAY;IAAEC,EAAE;IAAEC,CAAC;IAAEC,OAAO;IAAEC,UAAU;IAAEC,OAAO;IAAEC;EAAW,CAAC;EAC1F;EACA;EACA;EACI,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAEpC,IAAIY,GAAG,GAAG,CAAC,CAAC;EACZ,IAAIC,SAAS;EAEb,SAASC,eAAe,CAACC,CAAC,EAAEC,CAAC,EAAE;IAC3BD,CAAC,CAACE,cAAc,EAAE;IAClB,IAAIC,MAAM;IACV,IAAIC,QAAQ;IACZ,IAAIC,UAAU;IACdL,CAAC,CAACM,MAAM,CAACC,OAAO,GAAG,CAACP,CAAC,CAACM,MAAM,CAACC,OAAO;IACpCJ,MAAM,GAAGH,CAAC,CAACM,MAAM,CAACE,IAAI;IACtBJ,QAAQ,GAAGJ,CAAC,CAACM,MAAM,CAACG,KAAK;IACzBJ,UAAU,GAAGJ,CAAC,CAACS,OAAO,CAACC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,OAAO,CAAC;IAC5CjB,MAAM,CAAC;MAAC,UAAU,EAAEO,MAAM;MAAE,OAAO,EAAEC,QAAQ;MAAE,gBAAgB,EAAEC,UAAU,CAACS;IAAI,CAAC,CAAC;EACrF;EACA,SAASC,mBAAmB,CAACf,CAAC,EAAEC,CAAC,EAAE;IAC/BD,CAAC,CAACE,cAAc,EAAE;IAClB;;IAEA;IACA;IACA;IACD,IAAIc,GAAG,GAAGf,CAAC,CAACS,OAAO,CAACC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,OAAO,KAAK,IAAI,CAAC;IACjD;IACC;IACA;IACI;IACA;EACR;;EAEA,oBACI;IAAA,UACKxB,EAAE,CAAC4B,GAAG,CAAChB,CAAC,iBACL;MAAA,uBAAK;QAAM,QAAQ,EAAGD,CAAC,IAAKe,mBAAmB,CAACf,CAAC,EAAEC,CAAC,CAAE;QAAA,WAAEA,CAAC,CAACa,IAAI,EAC7Db,CAAC,CAACS,OAAO,CAACO,GAAG,CAACL,CAAC,iBACZ;UAAA,WAAQA,CAAC,CAACE,IAAI,eACd;YACA,IAAI,EAAC,OAAO;YACZ,IAAI,EAAEb,CAAC,CAACa,IAAK;YACb,KAAK,EAAEF,CAAC,CAACE,IAAK;YACd,OAAO,EAAC,OAAO;YACf,QAAQ,EAAGd,CAAC,IAAKD,eAAe,CAACC,CAAC,EAAEC,CAAC;UAAE;YAAA;YAAA;YAAA;UAAA,QAE/B;QAAA;UAAA;UAAA;UAAA;QAAA,QAAQ,CAAC,eACjB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAsB;MAAA;QAAA;QAAA;QAAA;MAAA;IAEnB;MAAA;MAAA;MAAA;IAAA,QACA;EACV;IAAA;IAAA;IAAA;EAAA,QACJ;AAET;AAAC,GAxDQf,IAAI;AAAA,KAAJA,IAAI;AA0Db,eAAeA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module"}