{"ast":null,"code":"// import React, { useEffect, useState } from \"react\";\n// import Questions from \"./Questions\";\n\n// function Adminpage({ user, rescue, handleRemoveAdmin, handleAddAdmin }) {\n//     const [viewedUsers, setViewedUsers] = useState([])\n//     const [clicked, setClicked] = useState(\"\")\n//     const [editQs, setEditQs] = useState(false)\n//     const [questions, setQuestions] = useState([])\n//     const [question, setQuestion] = useState({})\n//     const [allInfo, setAllInfo] = useState([])\n//     // const [addInfo, setAddInfo] = useState(false)\n//     const [addMoreInfo, setAddMoreInfo] = useState(false)\n//     const [inf, setInf] = useState({})\n//     const [opts, setOpts] = useState([])\n//     const [addOpt, setAddOpt] = useState(false)\n//     const [options, setOptions] = useState([])\n\n//     let title; \n//     let text;\n//     useEffect(() => {\n//         fetch(`/information/${rescue.id}`, {\n//             method: \"POST\", \n//             headers: {\n//                 \"Content-Type\": \"application/json\"\n//             },\n//             // body: JSON.stringify({ rescue_id: parseInt(rescue.id) }),\n//             body: JSON.stringify({ rescue_id: parseInt(rescue.id) }),\n\n//         })\n//         .then((r) => r.json())\n//         .then((allinf) => { \n//             setAllInfo(allinf)\n//             }\n//             ) \n//         },[]);\n\n//     function handleUsers(e) {\n//         e.preventDefault();\n//         fetch(`/allusers`, {\n//             method: \"POST\", \n//             headers: {\n//                 \"Content-Type\": \"application/json\"\n//             },\n//             body: JSON.stringify({ rescue_id: parseInt(rescue.id) }),\n//         })\n//         .then((r) => r.json())\n//         .then((ur) => { \n//             setViewedUsers(ur)\n//             setClicked(\"users\")\n//             }\n//             ) \n//        }\n// //   function handleShowAdminInfo(e) {\n// //     e.preventDefault();\n// //   }\n// //   function handleAddMoreQs(e) {\n// //     e.preventDefault();\n// //   }\n// //   function handleAddInfo(e) {\n// //     e.preventDefault();\n// //     setAddInfo(true)\n// //   }\n//   function handleSubmitInfo(e){\n//     e.preventDefault();\n//     setAddInfo(false)\n//     setEditQs(false)\n//   }\n//   function handleAddMoreInfo(e){\n//     e.preventDefault();\n//     setAddMoreInfo(true)\n//   }\n//   function handleChangeInfo(e){\n//     e.preventDefault();\n//     if (e.target.placeholder === \"Title\") {\n//         title = e.target.value;\n//     }\n//     if (e.target.placeholder === \"Enter text\") {\n//         text = e.target.value\n//     }\n//   }\n//   function handleSaveInfo(e){\n//     e.preventDefault();\n//     setAddMoreInfo(false)\n//     fetch(`/newinformation`, {\n//         method: \"POST\", \n//         headers: {\n//             \"Content-Type\": \"application/json\"\n//         },\n//         body: JSON.stringify({ rescue_id: rescue.id, title, text }),\n//     })\n//     .then((r) => r.json())\n//     .then((newInfo) => {\n//         setAllInfo([...allInfo, newInfo])\n//     })\n//    }\n//    function handleDeleteInfo(e, i) {\n//     let id = i.id\n//     fetch(`/information/${id}`, { \n//         method: 'DELETE'\n//     })\n//     setAllInfo(allInfo.filter(inf => inf.id !== id))  \n//  }\n//     function handleEditQs(e, i) {\n//         if (i !== {}) {\n//             setInf(i)\n//             setQuestions(i.questions)\n//             setEditQs(true)\n//         }\n//     }\n//     function handleSaveInfoChanges(e, i) {\n//         fetch(`/information/${i.id}`, {\n//             method: \"PATCH\",\n//             headers: {\n//                 \"Content-Type\": \"application/json\",\n//             },\n//             body: JSON.stringify({ i }),\n//         })\n//         .then((r) => r.json())\n//         .then((updatedI) => setAllInfo([...allInfo.filter(infor => infor.id !== updatedI.id), updatedI]))\n//     }\n//     function handleInfoChange(e, i) {\n//         if (e.target.id === \"title\") {\n//             i.title = e.target.value;\n//         }\n//         if (e.target.id === \"text\") {\n//             i.text = e.target.value\n//         }    \n//     }\n// return (\n//     <div>\n//     {!addInfo ? <button onClick={handleAddInfo}>Edit Info</button> : null }\n//     {/* <button style={{display: !addInfo ? 'visible' : 'none' }} onClick={handleAddInfo}>Edit Info</button> */}\n//     {addInfo ? <div>\n//        <form>\n//         Details:  \n//         <input \n//         type=\"text\" \n//         id=\"rescuename\" \n//         key={rescue.name}\n//         defaultValue={rescue.name}></input>  \n//         <input \n//         type=\"text\" \n//         id=\"rescuelocation\" \n//         key={rescue.location}\n//         defaultValue={rescue.location}></input>\n//         <br></br>  \n//     </form>\n//     <button>Save Updated Details</button>\n//     <br></br>\n//     <br></br>\n//     {addInfo && allInfo.length > 0 ? allInfo.map(i => <div>\n//             <form onChange={(e) => handleInfoChange(e, i)}>\n//             Title: <input \n//                 type=\"text\" \n//                 id=\"title\" \n//                 key={i.title[0]}\n//                 placeholder={i.title}\n//                 defaultValue={i.title}>\n//             </input><br></br>\n//             Text: <input \n//                 type=\"text\" \n//                 id=\"text\" \n//                 key={i.text[0]}\n//                 placeholder={i.text}\n//                 defaultValue={i.text}>\n//             </input> \n//             </form>\n//             <button onClick={(e) => handleDeleteInfo(e, i)}>Delete Information</button>\n//             <button onClick={(e) => handleSaveInfoChanges(e, i)}>Save Updated Information</button>\n//             <button onClick={(e) => handleEditQs(e, i)}>Edit Questions</button><br></br>\n//             {editQs && inf !== {} ? <Questions options={options} setOptions={setOptions} i={inf} questions={questions} setQuestions={setQuestions} question={question} setQuestion={setQuestion} opts={opts} setOpts={setOpts} addOpt={addOpt} setAddOpt={setAddOpt}/> : null } <br></br><br></br>\n//         </div> ): null} \n//     <button onClick={handleAddMoreInfo}>Add Information</button>\n//     {addMoreInfo ? <div>\n//         <form onChange={handleChangeInfo}>\n//             <input \n//             type=\"text\" \n//             id=\"title\" \n//             key=\"ttl\"\n//             placeholder=\"Title\"></input>\n//             <input \n//             type=\"text\" \n//             id=\"text\" \n//             key=\"txt\"\n//             placeholder=\"Enter text\"></input>\n//         </form> \n//         <button onClick={handleSaveInfo}>Save</button>\n//     </div> : null}\n//     <br></br>\n//     <button onClick={handleSubmitInfo}>Close</button> \n//     </div>\n//     : null}\n//     <br></br>\n//     <button>Edit Pets</button>\n//     <br></br>\n//     <button onClick={handleUsers}>Edit Users</button>\n//     {clicked === \"users\" && viewedUsers.length > 0 ? viewedUsers.map(v => <div key={v.id}><p key={v.user.name}>{v.user.name}, {v.status}</p> \n//     {v.status === \"Admin\" ? \n//     <button onClick={(e) => handleRemoveAdmin(e, v)}>Remove Admin</button> :\n//     <button onClick={(e) => handleAddAdmin(e, v)}>Make Admin</button>  \n//     } </div>) \n//    : null }\n//     </div>\n// )\n// }\n// export default Adminpage;","map":{"version":3,"names":[],"sources":["/Users/kstabile/backup-phase-5/client/src/Components/Adminpage.js"],"sourcesContent":["// import React, { useEffect, useState } from \"react\";\n// import Questions from \"./Questions\";\n\n// function Adminpage({ user, rescue, handleRemoveAdmin, handleAddAdmin }) {\n//     const [viewedUsers, setViewedUsers] = useState([])\n//     const [clicked, setClicked] = useState(\"\")\n//     const [editQs, setEditQs] = useState(false)\n//     const [questions, setQuestions] = useState([])\n//     const [question, setQuestion] = useState({})\n//     const [allInfo, setAllInfo] = useState([])\n//     // const [addInfo, setAddInfo] = useState(false)\n//     const [addMoreInfo, setAddMoreInfo] = useState(false)\n//     const [inf, setInf] = useState({})\n//     const [opts, setOpts] = useState([])\n//     const [addOpt, setAddOpt] = useState(false)\n//     const [options, setOptions] = useState([])\n\n\n//     let title; \n//     let text;\n//     useEffect(() => {\n//         fetch(`/information/${rescue.id}`, {\n//             method: \"POST\", \n//             headers: {\n//                 \"Content-Type\": \"application/json\"\n//             },\n//             // body: JSON.stringify({ rescue_id: parseInt(rescue.id) }),\n//             body: JSON.stringify({ rescue_id: parseInt(rescue.id) }),\n\n//         })\n//         .then((r) => r.json())\n//         .then((allinf) => { \n//             setAllInfo(allinf)\n//             }\n//             ) \n//         },[]);\n    \n//     function handleUsers(e) {\n//         e.preventDefault();\n//         fetch(`/allusers`, {\n//             method: \"POST\", \n//             headers: {\n//                 \"Content-Type\": \"application/json\"\n//             },\n//             body: JSON.stringify({ rescue_id: parseInt(rescue.id) }),\n//         })\n//         .then((r) => r.json())\n//         .then((ur) => { \n//             setViewedUsers(ur)\n//             setClicked(\"users\")\n//             }\n//             ) \n//        }\n// //   function handleShowAdminInfo(e) {\n// //     e.preventDefault();\n// //   }\n// //   function handleAddMoreQs(e) {\n// //     e.preventDefault();\n// //   }\n// //   function handleAddInfo(e) {\n// //     e.preventDefault();\n// //     setAddInfo(true)\n// //   }\n//   function handleSubmitInfo(e){\n//     e.preventDefault();\n//     setAddInfo(false)\n//     setEditQs(false)\n//   }\n//   function handleAddMoreInfo(e){\n//     e.preventDefault();\n//     setAddMoreInfo(true)\n//   }\n//   function handleChangeInfo(e){\n//     e.preventDefault();\n//     if (e.target.placeholder === \"Title\") {\n//         title = e.target.value;\n//     }\n//     if (e.target.placeholder === \"Enter text\") {\n//         text = e.target.value\n//     }\n//   }\n//   function handleSaveInfo(e){\n//     e.preventDefault();\n//     setAddMoreInfo(false)\n//     fetch(`/newinformation`, {\n//         method: \"POST\", \n//         headers: {\n//             \"Content-Type\": \"application/json\"\n//         },\n//         body: JSON.stringify({ rescue_id: rescue.id, title, text }),\n//     })\n//     .then((r) => r.json())\n//     .then((newInfo) => {\n//         setAllInfo([...allInfo, newInfo])\n//     })\n//    }\n//    function handleDeleteInfo(e, i) {\n//     let id = i.id\n//     fetch(`/information/${id}`, { \n//         method: 'DELETE'\n//     })\n//     setAllInfo(allInfo.filter(inf => inf.id !== id))  \n//  }\n//     function handleEditQs(e, i) {\n//         if (i !== {}) {\n//             setInf(i)\n//             setQuestions(i.questions)\n//             setEditQs(true)\n//         }\n//     }\n//     function handleSaveInfoChanges(e, i) {\n//         fetch(`/information/${i.id}`, {\n//             method: \"PATCH\",\n//             headers: {\n//                 \"Content-Type\": \"application/json\",\n//             },\n//             body: JSON.stringify({ i }),\n//         })\n//         .then((r) => r.json())\n//         .then((updatedI) => setAllInfo([...allInfo.filter(infor => infor.id !== updatedI.id), updatedI]))\n//     }\n//     function handleInfoChange(e, i) {\n//         if (e.target.id === \"title\") {\n//             i.title = e.target.value;\n//         }\n//         if (e.target.id === \"text\") {\n//             i.text = e.target.value\n//         }    \n//     }\n// return (\n//     <div>\n//     {!addInfo ? <button onClick={handleAddInfo}>Edit Info</button> : null }\n//     {/* <button style={{display: !addInfo ? 'visible' : 'none' }} onClick={handleAddInfo}>Edit Info</button> */}\n//     {addInfo ? <div>\n//        <form>\n//         Details:  \n//         <input \n//         type=\"text\" \n//         id=\"rescuename\" \n//         key={rescue.name}\n//         defaultValue={rescue.name}></input>  \n//         <input \n//         type=\"text\" \n//         id=\"rescuelocation\" \n//         key={rescue.location}\n//         defaultValue={rescue.location}></input>\n//         <br></br>  \n//     </form>\n//     <button>Save Updated Details</button>\n//     <br></br>\n//     <br></br>\n//     {addInfo && allInfo.length > 0 ? allInfo.map(i => <div>\n//             <form onChange={(e) => handleInfoChange(e, i)}>\n//             Title: <input \n//                 type=\"text\" \n//                 id=\"title\" \n//                 key={i.title[0]}\n//                 placeholder={i.title}\n//                 defaultValue={i.title}>\n//             </input><br></br>\n//             Text: <input \n//                 type=\"text\" \n//                 id=\"text\" \n//                 key={i.text[0]}\n//                 placeholder={i.text}\n//                 defaultValue={i.text}>\n//             </input> \n//             </form>\n//             <button onClick={(e) => handleDeleteInfo(e, i)}>Delete Information</button>\n//             <button onClick={(e) => handleSaveInfoChanges(e, i)}>Save Updated Information</button>\n//             <button onClick={(e) => handleEditQs(e, i)}>Edit Questions</button><br></br>\n//             {editQs && inf !== {} ? <Questions options={options} setOptions={setOptions} i={inf} questions={questions} setQuestions={setQuestions} question={question} setQuestion={setQuestion} opts={opts} setOpts={setOpts} addOpt={addOpt} setAddOpt={setAddOpt}/> : null } <br></br><br></br>\n//         </div> ): null} \n//     <button onClick={handleAddMoreInfo}>Add Information</button>\n//     {addMoreInfo ? <div>\n//         <form onChange={handleChangeInfo}>\n//             <input \n//             type=\"text\" \n//             id=\"title\" \n//             key=\"ttl\"\n//             placeholder=\"Title\"></input>\n//             <input \n//             type=\"text\" \n//             id=\"text\" \n//             key=\"txt\"\n//             placeholder=\"Enter text\"></input>\n//         </form> \n//         <button onClick={handleSaveInfo}>Save</button>\n//     </div> : null}\n//     <br></br>\n//     <button onClick={handleSubmitInfo}>Close</button> \n//     </div>\n//     : null}\n//     <br></br>\n//     <button>Edit Pets</button>\n//     <br></br>\n//     <button onClick={handleUsers}>Edit Users</button>\n//     {clicked === \"users\" && viewedUsers.length > 0 ? viewedUsers.map(v => <div key={v.id}><p key={v.user.name}>{v.user.name}, {v.status}</p> \n//     {v.status === \"Admin\" ? \n//     <button onClick={(e) => handleRemoveAdmin(e, v)}>Remove Admin</button> :\n//     <button onClick={(e) => handleAddAdmin(e, v)}>Make Admin</button>  \n//     } </div>) \n//    : null }\n//     </div>\n// )\n// }\n// export default Adminpage;"],"mappings":"AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}